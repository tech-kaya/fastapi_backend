version: "3.8"

services:
  app:
    build: .
    ports:
      - "8000:8000"
    environment:
      - POSTGRES_HOST=postgres
      - POSTGRES_DB=${POSTGRES_DB}
      - POSTGRES_USER=${POSTGRES_USER}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
      - POSTGRES_PORT=${POSTGRES_PORT}
      - BROWSER_USE_API_KEY=${BROWSER_USE_API_KEY}
      - LLM_MODEL=${LLM_MODEL}
      - HEADLESS=${HEADLESS}
      - SHOW_AGENT_STEPS=${SHOW_AGENT_STEPS}
      - LOG_LEVEL=${LOG_LEVEL}
      - FORM_TIMEOUT=${FORM_TIMEOUT}
      - MAX_AGENT_STEPS=${MAX_AGENT_STEPS}
      - MAX_RETRIES=${MAX_RETRIES}
      - RETRY_DELAY=${RETRY_DELAY}
      - BROWSER_VIEWPORT_WIDTH=${BROWSER_VIEWPORT_WIDTH}
      - BROWSER_VIEWPORT_HEIGHT=${BROWSER_VIEWPORT_HEIGHT}
      - USE_ADBLOCK=${USE_ADBLOCK}
      - HIGHLIGHT_ELEMENTS=${HIGHLIGHT_ELEMENTS}
      - SAVE_BROWSER_DATA=${SAVE_BROWSER_DATA}
    depends_on:
      - postgres
    volumes:
      - ./app:/app/app
    healthcheck:
      test:
        [
          "CMD",
          "python",
          "-c",
          "import requests; requests.get('http://localhost:8000/health')",
        ]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s

  postgres:
    image: postgres:15-alpine
    environment:
      - POSTGRES_DB=${POSTGRES_DB}
      - POSTGRES_USER=${POSTGRES_USER}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
    ports:
      - "${POSTGRES_PORT}:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${POSTGRES_USER}"]
      interval: 10s
      timeout: 5s
      retries: 5

volumes:
  postgres_data:
